{
  "version": 3,
  "sources": ["../../../../../apps/vulero_dialer/vulero_dialer/public/js/call_button.js", "../../../../../apps/vulero_dialer/vulero_dialer/public/js/queue_button.js", "../../../../../apps/vulero_dialer/vulero_dialer/public/js/connect_status.js", "../../../../../apps/vulero_dialer/frontend/call_loader.js"],
  "sourcesContent": ["// vulero_dialer/public/js/doctype_scripts.js\nfrappe.provide('vulero_dialer');\nvulero_dialer = class vulero_dialer {\n    static addCallButton (doctype, phoneField, mobileField) {\n        frappe.ui.form.on(doctype, {\n            refresh(frm) {\n                frm.add_custom_button('<i class=\"fa fa-phone\"></i> Call', () => {\n                    if (frm.doc[phoneField] && frm.doc[mobileField]) {\n                        // If both are set, ask the user which one to call\n                        let options = [\n                            {label: __('Phone: ') + frm.doc[phoneField], value: frm.doc[phoneField]},\n                            {label: __('Mobile: ') + frm.doc[mobileField], value: frm.doc[mobileField]}\n                        ];\n                        frappe.prompt([\n                            {'fieldname': 'number_to_call', 'fieldtype': 'Select', 'label': 'Which number to call?', 'options': options, 'reqd': 1}\n                        ], (values) => {\n                            triggerCallEvent(values.number_to_call);\n                        }, __('Call ' + doctype), __('<i class=\"fa fa-phone\"></i> Call'));\n                    } else if (frm.doc[phoneField] || frm.doc[mobileField]) {\n                        // If only one is set, call directly\n                        let number_to_call = frm.doc[phoneField] || frm.doc[mobileField];\n                        triggerCallEvent(number_to_call);            \n                    } else {\n                        // If neither phone nor mobile_no is set, inform the user\n                        frappe.msgprint(__('No contact number found for this ' + doctype.toLowerCase() + '.'));\n                    }\n                });\n            }\n        });\n}}\n\nfunction triggerCallEvent(number) {\n    window.dispatchEvent(new CustomEvent('callEvent', {\n        detail: { number: number }\n    }));\n}\n// $(document).ready(function() {\n//     function addCallButton(doctype, phoneField, mobileField) {\n//         frappe.ui.form.on(doctype, {\n//             refresh(frm) {\n//                 frm.add_custom_button('<i class=\"fa fa-phone\"></i> Call', () => {\n//                     if (frm.doc[phoneField] && frm.doc[mobileField]) {\n//                         // If both are set, ask the user which one to call\n//                         let options = [\n//                             {label: __('Phone: ') + frm.doc[phoneField], value: frm.doc[phoneField]},\n//                             {label: __('Mobile: ') + frm.doc[mobileField], value: frm.doc[mobileField]}\n//                         ];\n//                         frappe.prompt([\n//                             {'fieldname': 'number_to_call', 'fieldtype': 'Select', 'label': 'Which number to call?', 'options': options, 'reqd': 1}\n//                         ], (values) => {\n//                             triggerCallEvent(values.number_to_call);\n//                         }, __('Call ' + doctype), __('<i class=\"fa fa-phone\"></i> Call'));\n//                     } else if (frm.doc[phoneField] || frm.doc[mobileField]) {\n//                         // If only one is set, call directly\n//                         let number_to_call = frm.doc[phoneField] || frm.doc[mobileField];\n//                         triggerCallEvent(number_to_call);            \n//                     } else {\n//                         // If neither phone nor mobile_no is set, inform the user\n//                         frappe.msgprint(__('No contact number found for this ' + doctype.toLowerCase() + '.'));\n//                     }\n//                 });\n//             }\n//         });\n//     }\n\n\n\n//     // Add call button to multiple doctypes\n//     addCallButton('Lead', 'phone', 'mobile_no');\n//     addCallButton('Opportunity', 'phone', 'mobile_no');\n//     addCallButton('Contact', 'phone', 'mobile_no');\n//     addCallButton('Customer', 'phone', 'mobile_no');\n//     addCallButton('Student', 'mobile_no', '');\n//     addCallButton(\"Tourist\", \"\", \"mobile_no\");\n//     addCallButton('Followup', 'mobile_no', '');\n\n// });\n\n\n// Add call button to multiple doctypes\nvulero_dialer.addCallButton ('Lead', 'phone', 'mobile_no');\nvulero_dialer.addCallButton ('Opportunity', 'phone', 'mobile_no');\nvulero_dialer.addCallButton ('Contact', 'phone', 'mobile_no');\nvulero_dialer.addCallButton ('Customer', 'phone', 'mobile_no');\n// vulero_dialer.addCallButton ('Student', 'mobile_no', '');\n\n", "$(document).ready(function() {\n    const joinIconUrl = \"/assets/vulero_dialer/images/joining-queue.png\";\n    const leaveIconUrl = \"/assets/vulero_dialer/images/leaving-queue.png\";\n\n    window.addEventListener('queueEvent', function(e) {\n      if(e.detail == 'join_queue') {\n        $('#queueIcon').attr('src', leaveIconUrl);\n       // $('#queueButton').css('border-color', 'red');\n        frappe.msgprint('Joined the queue');\n      } else if (e.detail == 'leave_queue') {\n        $('#queueIcon').attr('src', joinIconUrl);\n        //$('#queueButton').css('border-color', 'green');\n        frappe.msgprint('Left the queue');\n      }\n    });\n\t\n    frappe.call({\n    \tmethod: 'vulero_dialer.config.queue.get_queue_status',\n    \targs: {},\n    \tcallback: function(response) {\n            if (response.message && response.message.status === \"success\") {\n                // Get the icon element\n                let icon = $('#queueIcon');\n            \n                // If the user is a member, set the icon to the 'leave' icon\n                if (response.message.is_member) {\n                    icon.attr('src', leaveIconUrl);\n                } else {\n                    // If not a member, set the icon to the 'join' icon\n                    icon.attr('src', joinIconUrl);\n                }\n            } else {\n                console.log(\"Error:\", response.message ? response.message : \"Unknown error\");\n            }\n        },\n        error: function(err) {\n            console.log(\"Error calling the method:\", err);\n        }\n    });\n\n    function appendQueueButton() {\n        let queueButton = $(`\n            <li class=\"nav-item\">\n                <button class=\"btn\" id=\"queueButton\" style=\"border: none; background-color: transparent;\">\n                    <img src=\"${joinIconUrl}\" id=\"queueIcon\" width=\"24\" height=\"24\" alt=\"joining-queue\"/>\n                </button>\n            </li>\n        `);\n\n\n        let bellIcon = $('ul.navbar-nav > li.nav-item.dropdown-notifications');\n        if (bellIcon.length === 0) {\n            console.error(\"Bell icon not found\");\n            // Retry after a delay\n            setTimeout(appendQueueButton, 500); // Retry after 500 milliseconds\n            return;\n        }\n\n        bellIcon.after(queueButton);\n\n\t$('#queueButton').on('click', function () {\n          let button = $(this);\n          let icon = $('#queueIcon');\n    \n          if (icon.attr('src') === joinIconUrl) {\n            frappe.call({\n              method: \"vulero_dialer.config.queue.add_to_queue\", // Add to queue method\n              callback: function (response) {\n                if (response.message.message === \"added\") {\n                  //$('#queueIcon').attr('src', leaveIconUrl);\n                    console.log(\"Successfully joined the queue.\");\n                    icon.attr('src', leaveIconUrl); // Change icon to leave\n                } else {\n                    console.error(\"Failed to join the queue:\", response.message.message);\n                }\n              }\n            });\n            frappe.call({\n              method: \"vulero_dialer.config.call_log.fetch_and_process_missed_call_logs\", \n              callback: function (response) {\n\t        console.log(\"Fetched Missed Calls\");\n              }\n            });\n          } else {\n            frappe.call({\n              method: \"vulero_dialer.config.queue.remove_from_queue\", // Remove from queue method\n              callback: function (response) {\n                if (response.message.message === \"removed\") {\n                  $('#queueIcon').attr('src', joinIconUrl);\n                    console.log(\"Successfully left the queue.\");\n                    icon.attr('src', joinIconUrl); // Change icon to join\n                } else {\n                    console.error(\"Failed to leave the queue:\", response.message);\n                }\n              }\n            });\n          }\n         });\n\n        $('head').append(`\n            <style>\n                #queueButton {\n                    display: inline-block;\n                    margin-left: 10px;\n                    background-color: transparent;\n                    border: none;\n                    padding: 0;\n                }\n                #queueButton:hover {\n                    background-color: rgba(0, 0, 0, 0.1);\n                }\n            </style>\n        `);\n\n    }\n\n    appendQueueButton();\n});\n\n", "$(document).ready(function() {\n    // Function to update the connection status dot color\n    window.addEventListener('statusEvent', function(e) {\n      switch (e.detail) {\n        case 'connected':\n          $('#connectionStatusDot').css('background-color', 'green');\n          break;\n        case 'disconnected':\n          $('#connectionStatusDot').css('background-color', 'red');\n          break;\n        case 'reconnecting':\n          $('#connectionStatusDot').css('background-color', 'orange');\n          break;\n        default:\n          console.log('Unknown status:', e.detail);\n          $('#connectionStatusDot').css('background-color', 'grey');\n          break;\n      }\n    });\n\n    function appendConnectionStatusDot() {\n        let bellIcon = $('ul.navbar-nav > li.nav-item.dropdown-notifications');\n        if (bellIcon.length === 0) {\n            console.error(\"Bell icon not found\");\n            // Retry after a delay\n            setTimeout(appendConnectionStatusDot, 500); // Retry after 500 milliseconds\n            return;\n        }\n\n        // Add the connection status dot to the navbar\n        let connectionStatusDot = $(`<li class=\"nav-item\"><span id=\"connectionStatusDot\"></span></li>`);\n        bellIcon.after(connectionStatusDot);\n\n        // Add CSS styles for the connection status dot\n        $('head').append(`\n            <style>\n                #connectionStatusDot {\n                    width: 8px;\n                    height: 8px;\n                    border-radius: 50%;\n                    background-color: red;\n                    display: inline-block;\n                    margin-left: 10px;\n                    vertical-align: middle;\n                }\n            </style>\n        `);\n    }\n\n    appendConnectionStatusDot();\n});\n", "(function() {\n  // Create a new script element\n  function createAndAppendDiv(id) {\n    const div = document.createElement('div');\n    div.id = id;\n\n    // Apply special styles and classes to the 'app' div\n    if (id === 'app') {\n        div.classList.add('sticky-top');\n        div.style.zIndex = '2000';\n    }\n\n    var mainSection = document.querySelector('.main-section');\n    if (mainSection) {\n        mainSection.prepend(div);\n    } else {\n        document.body.prepend(div);\n    }\n  }\n\n  // Create the required div elements\n  createAndAppendDiv('app');\n  createAndAppendDiv('modals');\n  createAndAppendDiv('popovers');\n\n  var script = document.createElement('script');\n  \n  // Create a new link element for the stylesheet\n  var link = document.createElement('link');\n\n  // Set the script's source (src) to the URL of the module you want to load\n  link.rel = 'stylesheet'; // Correct relationship attribute for stylesheets\n  link.href = '/assets/vulero_dialer/frontend/assets/index-DaPgrmOC.css';\n  \n  script.src = '/assets/vulero_dialer/frontend/assets/index-Dyl3I0Od.js';\n\n  // IMPORTANT: Set the script type to \"module\"\n  script.type = 'module';\n\n  // Append the script and link elements to the head of the document\n  // to load and execute the module script and apply the stylesheet\n  document.head.appendChild(script);\n  document.head.appendChild(link);\n})();\n\n\n"],
  "mappings": "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",
  "names": ["vulero_dialer"]
}
