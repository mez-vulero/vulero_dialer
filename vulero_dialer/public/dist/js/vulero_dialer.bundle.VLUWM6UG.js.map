{
  "version": 3,
  "sources": ["../../../../../apps/vulero_dialer/vulero_dialer/public/js/call_button.js", "../../../../../apps/vulero_dialer/vulero_dialer/public/js/queue_button.js", "../../../../../apps/vulero_dialer/vulero_dialer/public/js/connect_status.js", "../../../../../apps/vulero_dialer/frontend/call_loader.js"],
  "sourcesContent": ["// vulero_dialer/public/js/doctype_scripts.js\nfrappe.provide('vulero_dialer');\nvulero_dialer = class vulero_dialer {\n    static addCallButton (doctype, phoneField, mobileField) {\n        frappe.ui.form.on(doctype, {\n            refresh(frm) {\n                frm.add_custom_button('<i class=\"fa fa-phone\"></i> Call', () => {\n                    if (frm.doc[phoneField] && frm.doc[mobileField]) {\n                        // If both are set, ask the user which one to call\n                        let options = [\n                            {label: __('Phone: ') + frm.doc[phoneField], value: frm.doc[phoneField]},\n                            {label: __('Mobile: ') + frm.doc[mobileField], value: frm.doc[mobileField]}\n                        ];\n                        frappe.prompt([\n                            {'fieldname': 'number_to_call', 'fieldtype': 'Select', 'label': 'Which number to call?', 'options': options, 'reqd': 1}\n                        ], (values) => {\n                            triggerCallEvent(values.number_to_call);\n                        }, __('Call ' + doctype), __('<i class=\"fa fa-phone\"></i> Call'));\n                    } else if (frm.doc[phoneField] || frm.doc[mobileField]) {\n                        // If only one is set, call directly\n                        let number_to_call = frm.doc[phoneField] || frm.doc[mobileField];\n                        triggerCallEvent(number_to_call);            \n                    } else {\n                        // If neither phone nor mobile_no is set, inform the user\n                        frappe.msgprint(__('No contact number found for this ' + doctype.toLowerCase() + '.'));\n                    }\n                });\n            }\n        });\n}}\n\nfunction triggerCallEvent(number) {\n    window.dispatchEvent(new CustomEvent('callEvent', {\n        detail: { number: number }\n    }));\n}\n// $(document).ready(function() {\n//     function addCallButton(doctype, phoneField, mobileField) {\n//         frappe.ui.form.on(doctype, {\n//             refresh(frm) {\n//                 frm.add_custom_button('<i class=\"fa fa-phone\"></i> Call', () => {\n//                     if (frm.doc[phoneField] && frm.doc[mobileField]) {\n//                         // If both are set, ask the user which one to call\n//                         let options = [\n//                             {label: __('Phone: ') + frm.doc[phoneField], value: frm.doc[phoneField]},\n//                             {label: __('Mobile: ') + frm.doc[mobileField], value: frm.doc[mobileField]}\n//                         ];\n//                         frappe.prompt([\n//                             {'fieldname': 'number_to_call', 'fieldtype': 'Select', 'label': 'Which number to call?', 'options': options, 'reqd': 1}\n//                         ], (values) => {\n//                             triggerCallEvent(values.number_to_call);\n//                         }, __('Call ' + doctype), __('<i class=\"fa fa-phone\"></i> Call'));\n//                     } else if (frm.doc[phoneField] || frm.doc[mobileField]) {\n//                         // If only one is set, call directly\n//                         let number_to_call = frm.doc[phoneField] || frm.doc[mobileField];\n//                         triggerCallEvent(number_to_call);            \n//                     } else {\n//                         // If neither phone nor mobile_no is set, inform the user\n//                         frappe.msgprint(__('No contact number found for this ' + doctype.toLowerCase() + '.'));\n//                     }\n//                 });\n//             }\n//         });\n//     }\n\n\n\n//     // Add call button to multiple doctypes\n//     addCallButton('Lead', 'phone', 'mobile_no');\n//     addCallButton('Opportunity', 'phone', 'mobile_no');\n//     addCallButton('Contact', 'phone', 'mobile_no');\n//     addCallButton('Customer', 'phone', 'mobile_no');\n//     addCallButton('Student', 'mobile_no', '');\n//     addCallButton(\"Tourist\", \"\", \"mobile_no\");\n//     addCallButton('Followup', 'mobile_no', '');\n\n// });\n\n\n// Add call button to multiple doctypes\nvulero_dialer.addCallButton ('Lead', 'phone', 'mobile_no');\nvulero_dialer.addCallButton ('Opportunity', 'phone', 'mobile_no');\nvulero_dialer.addCallButton ('Contact', 'phone', 'mobile_no');\nvulero_dialer.addCallButton ('Customer', 'phone', 'mobile_no');\n// vulero_dialer.addCallButton ('Student', 'mobile_no', '');\n\n", "$(document).ready(function() {\n    const joinIconUrl = \"/assets/vulero_dialer/images/joining-queue.png\";\n    const leaveIconUrl = \"/assets/vulero_dialer/images/leaving-queue.png\";\n\n    window.addEventListener('queueEvent', function(e) {\n      if(e.detail == 'join_queue') {\n        $('#queueIcon').attr('src', leaveIconUrl);\n       // $('#queueButton').css('border-color', 'red');\n        frappe.msgprint('Joined the queue');\n      } else if (e.detail == 'leave_queue') {\n        $('#queueIcon').attr('src', joinIconUrl);\n        //$('#queueButton').css('border-color', 'green');\n        frappe.msgprint('Left the queue');\n      }\n    });\n\t\n    frappe.call({\n    \tmethod: 'vulero_dialer.config.queue.get_queue_status',\n    \targs: {},\n    \tcallback: function(response) {\n            if (response.message && response.message.status === \"success\") {\n                // Get the icon element\n                let icon = $('#queueIcon');\n            \n                // If the user is a member, set the icon to the 'leave' icon\n                if (response.message.is_member) {\n                    icon.attr('src', leaveIconUrl);\n                } else {\n                    // If not a member, set the icon to the 'join' icon\n                    icon.attr('src', joinIconUrl);\n                }\n            } else {\n                console.log(\"Error:\", response.message ? response.message : \"Unknown error\");\n            }\n        },\n        error: function(err) {\n            console.log(\"Error calling the method:\", err);\n        }\n    });\n\n    function appendQueueButton() {\n        let queueButton = $(`\n            <li class=\"nav-item\">\n                <button class=\"btn\" id=\"queueButton\" style=\"border: none; background-color: transparent;\">\n                    <img src=\"${joinIconUrl}\" id=\"queueIcon\" width=\"24\" height=\"24\" alt=\"joining-queue\"/>\n                </button>\n            </li>\n        `);\n\n\n        let bellIcon = $('ul.navbar-nav > li.nav-item.dropdown-notifications');\n        if (bellIcon.length === 0) {\n            console.error(\"Bell icon not found\");\n            // Retry after a delay\n            setTimeout(appendQueueButton, 500); // Retry after 500 milliseconds\n            return;\n        }\n\n        bellIcon.after(queueButton);\n\n\t$('#queueButton').on('click', function () {\n          let button = $(this);\n          let icon = $('#queueIcon');\n    \n          if (icon.attr('src') === joinIconUrl) {\n            frappe.call({\n              method: \"vulero_dialer.config.queue.add_to_queue\", // Add to queue method\n              callback: function (response) {\n                if (response.message.message === \"added\") {\n                  //$('#queueIcon').attr('src', leaveIconUrl);\n                    console.log(\"Successfully joined the queue.\");\n                    icon.attr('src', leaveIconUrl); // Change icon to leave\n                } else {\n                    console.error(\"Failed to join the queue:\", response.message.message);\n                }\n              }\n            });\n            frappe.call({\n              method: \"vulero_dialer.config.call_log.fetch_and_process_missed_call_logs\", \n              callback: function (response) {\n\t        console.log(\"Fetched Missed Calls\");\n              }\n            });\n          } else {\n            frappe.call({\n              method: \"vulero_dialer.config.queue.remove_from_queue\", // Remove from queue method\n              callback: function (response) {\n                if (response.message.message === \"removed\") {\n                  $('#queueIcon').attr('src', joinIconUrl);\n                    console.log(\"Successfully left the queue.\");\n                    icon.attr('src', joinIconUrl); // Change icon to join\n                } else {\n                    console.error(\"Failed to leave the queue:\", response.message);\n                }\n              }\n            });\n          }\n         });\n\n        $('head').append(`\n            <style>\n                #queueButton {\n                    display: inline-block;\n                    margin-left: 10px;\n                    background-color: transparent;\n                    border: none;\n                    padding: 0;\n                }\n                #queueButton:hover {\n                    background-color: rgba(0, 0, 0, 0.1);\n                }\n            </style>\n        `);\n\n    }\n\n    appendQueueButton();\n});\n\n", "$(document).ready(function() {\n    // Function to update the connection status dot color\n    window.addEventListener('statusEvent', function(e) {\n      switch (e.detail) {\n        case 'connected':\n          $('#connectionStatusDot').css('background-color', 'green');\n          break;\n        case 'disconnected':\n          $('#connectionStatusDot').css('background-color', 'red');\n          break;\n        case 'reconnecting':\n          $('#connectionStatusDot').css('background-color', 'orange');\n          break;\n        default:\n          console.log('Unknown status:', e.detail);\n          $('#connectionStatusDot').css('background-color', 'grey');\n          break;\n      }\n    });\n\n    function appendConnectionStatusDot() {\n        let bellIcon = $('ul.navbar-nav > li.nav-item.dropdown-notifications');\n        if (bellIcon.length === 0) {\n            console.error(\"Bell icon not found\");\n            // Retry after a delay\n            setTimeout(appendConnectionStatusDot, 500); // Retry after 500 milliseconds\n            return;\n        }\n\n        // Add the connection status dot to the navbar\n        let connectionStatusDot = $(`<li class=\"nav-item\"><span id=\"connectionStatusDot\"></span></li>`);\n        bellIcon.after(connectionStatusDot);\n\n        // Add CSS styles for the connection status dot\n        $('head').append(`\n            <style>\n                #connectionStatusDot {\n                    width: 8px;\n                    height: 8px;\n                    border-radius: 50%;\n                    background-color: red;\n                    display: inline-block;\n                    margin-left: 10px;\n                    vertical-align: middle;\n                }\n            </style>\n        `);\n    }\n\n    appendConnectionStatusDot();\n});\n", "(function() {\n  // Create a new script element\n  function createAndAppendDiv(id) {\n    const div = document.createElement('div');\n    div.id = id;\n\n    // Apply special styles and classes to the 'app' div\n    if (id === 'app') {\n        div.classList.add('sticky-top');\n        div.style.zIndex = '2000';\n    }\n\n    var mainSection = document.querySelector('.main-section');\n    if (mainSection) {\n        mainSection.prepend(div);\n    } else {\n        document.body.prepend(div);\n    }\n  }\n\n  // Create the required div elements\n  createAndAppendDiv('app');\n  createAndAppendDiv('modals');\n  createAndAppendDiv('popovers');\n\n  var script = document.createElement('script');\n  \n  // Create a new link element for the stylesheet\n  var link = document.createElement('link');\n\n  // Set the script's source (src) to the URL of the module you want to load\n  link.rel = 'stylesheet'; // Correct relationship attribute for stylesheets\n  link.href = '/assets/vulero_dialer/frontend/assets/index-DaPgrmOC.css';\n  \n  script.src = '/assets/vulero_dialer/frontend/assets/index-Dyl3I0Od.js';\n\n  // IMPORTANT: Set the script type to \"module\"\n  script.type = 'module';\n\n  // Append the script and link elements to the head of the document\n  // to load and execute the module script and apply the stylesheet\n  document.head.appendChild(script);\n  document.head.appendChild(link);\n})();\n\n\n"],
  "mappings": "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",
  "names": ["doctype", "phoneField", "mobileField", "frm", "options", "values", "triggerCallEvent", "number_to_call", "number", "joinIconUrl", "leaveIconUrl", "e", "response", "icon", "err", "appendQueueButton", "queueButton", "bellIcon", "button", "e", "appendConnectionStatusDot", "bellIcon", "connectionStatusDot", "createAndAppendDiv", "id", "div", "mainSection", "script", "link"]
}
